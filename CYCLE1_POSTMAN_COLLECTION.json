{
  "info": {
    "name": "Time Tracker - Cycle 1: Enhanced Authentication",
    "description": "Test collection for enhanced authentication and user management APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000/api",
      "type": "string"
    },
    {
      "key": "admin_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "created_user_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Authentication Tests",
      "item": [
        {
          "name": "1.1 Enhanced Signup - Valid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('name');",
                  "    pm.expect(response).to.have.property('email');",
                  "    pm.expect(response).to.have.property('role');",
                  "    pm.expect(response.role).to.eql('user');",
                  "});",
                  "",
                  "pm.test(\"Password is not returned\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.not.have.property('password');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"testuser1\",\n    \"email\": \"testuser1@example.com\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"password\": \"testpass123\",\n    \"password_confirm\": \"testpass123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/signup/",
              "host": ["{{base_url}}"],
              "path": ["signup", ""]
            }
          }
        },
        {
          "name": "1.2 Enhanced Signup - Password Mismatch",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Password confirmation error\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('password_confirm');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"testuser2\",\n    \"email\": \"testuser2@example.com\",\n    \"first_name\": \"Jane\",\n    \"last_name\": \"Smith\",\n    \"password\": \"testpass123\",\n    \"password_confirm\": \"differentpass\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/signup/",
              "host": ["{{base_url}}"],
              "path": ["signup", ""]
            }
          }
        },
        {
          "name": "1.3 Admin Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Token is returned\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('token');",
                  "    pm.collectionVariables.set('admin_token', response.token);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/login/",
              "host": ["{{base_url}}"],
              "path": ["login", ""]
            }
          }
        },
        {
          "name": "1.4 User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Token is returned\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('token');",
                  "    pm.collectionVariables.set('user_token', response.token);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"testuser1\",\n    \"password\": \"testpass123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/login/",
              "host": ["{{base_url}}"],
              "path": ["login", ""]
            }
          }
        }
      ]
    },
    {
      "name": "2. Profile Management",
      "item": [
        {
          "name": "2.1 Get Admin Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Admin profile data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('role');",
                  "    pm.expect(response.role).to.eql('admin');",
                  "    pm.expect(response.is_admin).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Token {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/profile/",
              "host": ["{{base_url}}"],
              "path": ["profile", ""]
            }
          }
        },
        {
          "name": "2.2 Get User Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"User profile data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('role');",
                  "    pm.expect(response.role).to.eql('user');",
                  "    pm.expect(response.is_admin).to.be.false;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Token {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/profile/",
              "host": ["{{base_url}}"],
              "path": ["profile", ""]
            }
          }
        }
      ]
    },
    {
      "name": "3. Admin User Management",
      "item": [
        {
          "name": "3.1 List All Users (Admin)",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Users list returned\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(Array.isArray(response)).to.be.true;",
                  "    pm.expect(response.length).to.be.at.least(1);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Token {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/",
              "host": ["{{base_url}}"],
              "path": ["users", ""]
            }
          }
        },
        {
          "name": "3.2 Create New User (Admin)",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"User created successfully\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('name');",
                  "    pm.collectionVariables.set('created_user_id', response.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Token {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"newuser1\",\n    \"email\": \"newuser1@example.com\",\n    \"first_name\": \"New\",\n    \"last_name\": \"User\",\n    \"password\": \"newpass123\",\n    \"password_confirm\": \"newpass123\",\n    \"is_admin\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/",
              "host": ["{{base_url}}"],
              "path": ["users", ""]
            }
          }
        },
        {
          "name": "3.3 Get User Details (Admin)",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"User details returned\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('username');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Token {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/{{created_user_id}}/",
              "host": ["{{base_url}}"],
              "path": ["users", "{{created_user_id}}", ""]
            }
          }
        },
        {
          "name": "3.4 Update User (Admin)",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"User updated successfully\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.first_name).to.eql('Updated');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Token {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"first_name\": \"Updated\",\n    \"last_name\": \"User\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/{{created_user_id}}/",
              "host": ["{{base_url}}"],
              "path": ["users", "{{created_user_id}}", ""]
            }
          }
        }
      ]
    },
    {
      "name": "4. Permission Tests",
      "item": [
        {
          "name": "4.1 Non-Admin Access Denied",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 403\", function () {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  "",
                  "pm.test(\"Access forbidden message\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('detail');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Token {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/",
              "host": ["{{base_url}}"],
              "path": ["users", ""]
            }
          }
        },
        {
          "name": "4.2 Unauthenticated Access Denied",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/",
              "host": ["{{base_url}}"],
              "path": ["users", ""]
            }
          }
        }
      ]
    },
    {
      "name": "5. Filtering Tests",
      "item": [
        {
          "name": "5.1 Filter Users by Role - Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Only admin users returned\", function () {",
                  "    const response = pm.response.json();",
                  "    response.forEach(user => {",
                  "        pm.expect(user.role).to.eql('admin');",
                  "    });",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Token {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/?role=admin",
              "host": ["{{base_url}}"],
              "path": ["users", ""],
              "query": [
                {
                  "key": "role",
                  "value": "admin"
                }
              ]
            }
          }
        },
        {
          "name": "5.2 Filter Users by Role - User",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Only regular users returned\", function () {",
                  "    const response = pm.response.json();",
                  "    response.forEach(user => {",
                  "        pm.expect(user.role).to.eql('user');",
                  "    });",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Token {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/?role=user",
              "host": ["{{base_url}}"],
              "path": ["users", ""],
              "query": [
                {
                  "key": "role",
                  "value": "user"
                }
              ]
            }
          }
        }
      ]
    }
  ]
} 